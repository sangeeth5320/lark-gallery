(function(){

/////////////////////////////////////////////////////////////////////////
//                                                                     //
// client/lib/counter/waypoints.min.js                                 //
//                                                                     //
/////////////////////////////////////////////////////////////////////////
                                                                       //
// Generated by CoffeeScript 1.6.2                                     //
/*                                                                     //
jQuery Waypoints - v2.0.4                                              //
Copyright (c) 2011-2014 Caleb Troughton                                //
Dual licensed under the MIT license and GPL license.                   //
https://github.com/imakewebthings/jquery-waypoints/blob/master/licenses.txt
*/                                                                     //
(function () {                                                         // 8
  var t = [].indexOf || function (t) {                                 // 8
    for (var e = 0, n = this.length; e < n; e++) {                     // 8
      if (e in this && this[e] === t) return e;                        // 8
    }return -1;                                                        //
  },                                                                   //
      e = [].slice;(function (t, e) {                                  //
    if (typeof define === "function" && define.amd) {                  // 8
      return define("waypoints", ["jquery"], function (n) {            // 8
        return e(n, t);                                                // 8
      });                                                              //
    } else {                                                           //
      return e(t.jQuery, t);                                           // 8
    }                                                                  //
  })(this, function (n, r) {                                           //
    var i, o, l, s, f, u, c, a, h, d, p, y, v, w, g, m;i = n(r);a = t.call(r, "ontouchstart") >= 0;s = { horizontal: {}, vertical: {} };f = 1;c = {};u = "waypoints-context-id";p = "resize.waypoints";y = "scroll.waypoints";v = 1;w = "waypoints-waypoint-ids";g = "waypoint";m = "waypoints";o = (function () {
      function t(t) {                                                  // 8
        var e = this;this.$element = t;this.element = t[0];this.didResize = false;this.didScroll = false;this.id = "context" + f++;this.oldScroll = { x: t.scrollLeft(), y: t.scrollTop() };this.waypoints = { horizontal: {}, vertical: {} };this.element[u] = this.id;c[this.id] = this;t.bind(y, function () {
          var t;if (!(e.didScroll || a)) {                             // 8
            e.didScroll = true;t = function () {                       // 8
              e.doScroll();return e.didScroll = false;                 // 8
            };return r.setTimeout(t, n[m].settings.scrollThrottle);    //
          }                                                            //
        });t.bind(p, function () {                                     //
          var t;if (!e.didResize) {                                    // 8
            e.didResize = true;t = function () {                       // 8
              n[m]("refresh");return e.didResize = false;              // 8
            };return r.setTimeout(t, n[m].settings.resizeThrottle);    //
          }                                                            //
        });                                                            //
      }t.prototype.doScroll = function () {                            //
        var t,                                                         // 8
            e = this;t = { horizontal: { newScroll: this.$element.scrollLeft(), oldScroll: this.oldScroll.x, forward: "right", backward: "left" }, vertical: { newScroll: this.$element.scrollTop(), oldScroll: this.oldScroll.y, forward: "down", backward: "up" } };if (a && (!t.vertical.oldScroll || !t.vertical.newScroll)) {
          n[m]("refresh");                                             // 8
        }n.each(t, function (t, r) {                                   //
          var i, o, l;l = [];o = r.newScroll > r.oldScroll;i = o ? r.forward : r.backward;n.each(e.waypoints[t], function (t, e) {
            var n, i;if (r.oldScroll < (n = e.offset) && n <= r.newScroll) {
              return l.push(e);                                        // 8
            } else if (r.newScroll < (i = e.offset) && i <= r.oldScroll) {
              return l.push(e);                                        // 8
            }                                                          //
          });l.sort(function (t, e) {                                  //
            return t.offset - e.offset;                                // 8
          });if (!o) {                                                 //
            l.reverse();                                               // 8
          }return n.each(l, function (t, e) {                          //
            if (e.options.continuous || t === l.length - 1) {          // 8
              return e.trigger([i]);                                   // 8
            }                                                          //
          });                                                          //
        });return this.oldScroll = { x: t.horizontal.newScroll, y: t.vertical.newScroll };
      };t.prototype.refresh = function () {                            //
        var t,                                                         // 8
            e,                                                         //
            r,                                                         //
            i = this;r = n.isWindow(this.element);e = this.$element.offset();this.doScroll();t = { horizontal: { contextOffset: r ? 0 : e.left, contextScroll: r ? 0 : this.oldScroll.x, contextDimension: this.$element.width(), oldScroll: this.oldScroll.x, forward: "right", backward: "left", offsetProp: "left" }, vertical: { contextOffset: r ? 0 : e.top, contextScroll: r ? 0 : this.oldScroll.y, contextDimension: r ? n[m]("viewportHeight") : this.$element.height(), oldScroll: this.oldScroll.y, forward: "down", backward: "up", offsetProp: "top" } };return n.each(t, function (t, e) {
          return n.each(i.waypoints[t], function (t, r) {              // 8
            var i, o, l, s, f;i = r.options.offset;l = r.offset;o = n.isWindow(r.element) ? 0 : r.$element.offset()[e.offsetProp];if (n.isFunction(i)) {
              i = i.apply(r.element);                                  // 8
            } else if (typeof i === "string") {                        //
              i = parseFloat(i);if (r.options.offset.indexOf("%") > -1) {
                i = Math.ceil(e.contextDimension * i / 100);           // 8
              }                                                        //
            }r.offset = o - e.contextOffset + e.contextScroll - i;if (r.options.onlyOnScroll && l != null || !r.enabled) {
              return;                                                  // 8
            }if (l !== null && l < (s = e.oldScroll) && s <= r.offset) {
              return r.trigger([e.backward]);                          // 8
            } else if (l !== null && l > (f = e.oldScroll) && f >= r.offset) {
              return r.trigger([e.forward]);                           // 8
            } else if (l === null && e.oldScroll >= r.offset) {        //
              return r.trigger([e.forward]);                           // 8
            }                                                          //
          });                                                          //
        });                                                            //
      };t.prototype.checkEmpty = function () {                         //
        if (n.isEmptyObject(this.waypoints.horizontal) && n.isEmptyObject(this.waypoints.vertical)) {
          this.$element.unbind([p, y].join(" "));return delete c[this.id];
        }                                                              //
      };return t;                                                      //
    })();l = (function () {                                            //
      function t(t, e, r) {                                            // 8
        var i, o;r = n.extend({}, n.fn[g].defaults, r);if (r.offset === "bottom-in-view") {
          r.offset = function () {                                     // 8
            var t;t = n[m]("viewportHeight");if (!n.isWindow(e.element)) {
              t = e.$element.height();                                 // 8
            }return t - n(this).outerHeight();                         //
          };                                                           //
        }this.$element = t;this.element = t[0];this.axis = r.horizontal ? "horizontal" : "vertical";this.callback = r.handler;this.context = e;this.enabled = r.enabled;this.id = "waypoints" + v++;this.offset = null;this.options = r;e.waypoints[this.axis][this.id] = this;s[this.axis][this.id] = this;i = (o = this.element[w]) != null ? o : [];i.push(this.id);this.element[w] = i;
      }t.prototype.trigger = function (t) {                            //
        if (!this.enabled) {                                           // 8
          return;                                                      // 8
        }if (this.callback != null) {                                  //
          this.callback.apply(this.element, t);                        // 8
        }if (this.options.triggerOnce) {                               //
          return this.destroy();                                       // 8
        }                                                              //
      };t.prototype.disable = function () {                            //
        return this.enabled = false;                                   // 8
      };t.prototype.enable = function () {                             //
        this.context.refresh();return this.enabled = true;             // 8
      };t.prototype.destroy = function () {                            //
        delete s[this.axis][this.id];delete this.context.waypoints[this.axis][this.id];return this.context.checkEmpty();
      };t.getWaypointsByElement = function (t) {                       //
        var e, r;r = t[w];if (!r) {                                    // 8
          return [];                                                   // 8
        }e = n.extend({}, s.horizontal, s.vertical);return n.map(r, function (t) {
          return e[t];                                                 // 8
        });                                                            //
      };return t;                                                      //
    })();d = { init: function (t, e) {                                 //
        var r;if (e == null) {                                         // 8
          e = {};                                                      // 8
        }if ((r = e.handler) == null) {                                //
          e.handler = t;                                               // 8
        }this.each(function () {                                       //
          var t, r, i, s;t = n(this);i = (s = e.context) != null ? s : n.fn[g].defaults.context;if (!n.isWindow(i)) {
            i = t.closest(i);                                          // 8
          }i = n(i);r = c[i[0][u]];if (!r) {                           //
            r = new o(i);                                              // 8
          }return new l(t, r, e);                                      //
        });n[m]("refresh");return this;                                //
      }, disable: function () {                                        //
        return d._invoke.call(this, "disable");                        // 8
      }, enable: function () {                                         //
        return d._invoke.call(this, "enable");                         // 8
      }, destroy: function () {                                        //
        return d._invoke.call(this, "destroy");                        // 8
      }, prev: function (t, e) {                                       //
        return d._traverse.call(this, t, e, function (t, e, n) {       // 8
          if (e > 0) {                                                 // 8
            return t.push(n[e - 1]);                                   // 8
          }                                                            //
        });                                                            //
      }, next: function (t, e) {                                       //
        return d._traverse.call(this, t, e, function (t, e, n) {       // 8
          if (e < n.length - 1) {                                      // 8
            return t.push(n[e + 1]);                                   // 8
          }                                                            //
        });                                                            //
      }, _traverse: function (t, e, i) {                               //
        var o, l;if (t == null) {                                      // 8
          t = "vertical";                                              // 8
        }if (e == null) {                                              //
          e = r;                                                       // 8
        }l = h.aggregate(e);o = [];this.each(function () {             //
          var e;e = n.inArray(this, l[t]);return i(o, e, l[t]);        // 8
        });return this.pushStack(o);                                   //
      }, _invoke: function (t) {                                       //
        this.each(function () {                                        // 8
          var e;e = l.getWaypointsByElement(this);return n.each(e, function (e, n) {
            n[t]();return true;                                        // 8
          });                                                          //
        });return this;                                                //
      } };n.fn[g] = function () {                                      //
      var t, r;r = arguments[0], t = 2 <= arguments.length ? e.call(arguments, 1) : [];if (d[r]) {
        return d[r].apply(this, t);                                    // 8
      } else if (n.isFunction(r)) {                                    //
        return d.init.apply(this, arguments);                          // 8
      } else if (n.isPlainObject(r)) {                                 //
        return d.init.apply(this, [null, r]);                          // 8
      } else if (!r) {                                                 //
        return n.error("jQuery Waypoints needs a callback function or handler option.");
      } else {                                                         //
        return n.error("The " + r + " method does not exist in jQuery Waypoints.");
      }                                                                //
    };n.fn[g].defaults = { context: r, continuous: true, enabled: true, horizontal: false, offset: 0, triggerOnce: false };h = { refresh: function () {
        return n.each(c, function (t, e) {                             // 8
          return e.refresh();                                          // 8
        });                                                            //
      }, viewportHeight: function () {                                 //
        var t;return (t = r.innerHeight) != null ? t : i.height();     // 8
      }, aggregate: function (t) {                                     //
        var e, r, i;e = s;if (t) {                                     // 8
          e = (i = c[n(t)[0][u]]) != null ? i.waypoints : void 0;      // 8
        }if (!e) {                                                     //
          return [];                                                   // 8
        }r = { horizontal: [], vertical: [] };n.each(r, function (t, i) {
          n.each(e[t], function (t, e) {                               // 8
            return i.push(e);                                          // 8
          });i.sort(function (t, e) {                                  //
            return t.offset - e.offset;                                // 8
          });r[t] = n.map(i, function (t) {                            //
            return t.element;                                          // 8
          });return r[t] = n.unique(r[t]);                             //
        });return r;                                                   //
      }, above: function (t) {                                         //
        if (t == null) {                                               // 8
          t = r;                                                       // 8
        }return h._filter(t, "vertical", function (t, e) {             //
          return e.offset <= t.oldScroll.y;                            // 8
        });                                                            //
      }, below: function (t) {                                         //
        if (t == null) {                                               // 8
          t = r;                                                       // 8
        }return h._filter(t, "vertical", function (t, e) {             //
          return e.offset > t.oldScroll.y;                             // 8
        });                                                            //
      }, left: function (t) {                                          //
        if (t == null) {                                               // 8
          t = r;                                                       // 8
        }return h._filter(t, "horizontal", function (t, e) {           //
          return e.offset <= t.oldScroll.x;                            // 8
        });                                                            //
      }, right: function (t) {                                         //
        if (t == null) {                                               // 8
          t = r;                                                       // 8
        }return h._filter(t, "horizontal", function (t, e) {           //
          return e.offset > t.oldScroll.x;                             // 8
        });                                                            //
      }, enable: function () {                                         //
        return h._invoke("enable");                                    // 8
      }, disable: function () {                                        //
        return h._invoke("disable");                                   // 8
      }, destroy: function () {                                        //
        return h._invoke("destroy");                                   // 8
      }, extendFn: function (t, e) {                                   //
        return d[t] = e;                                               // 8
      }, _invoke: function (t) {                                       //
        var e;e = n.extend({}, s.vertical, s.horizontal);return n.each(e, function (e, n) {
          n[t]();return true;                                          // 8
        });                                                            //
      }, _filter: function (t, e, r) {                                 //
        var i, o;i = c[n(t)[0][u]];if (!i) {                           // 8
          return [];                                                   // 8
        }o = [];n.each(i.waypoints[e], function (t, e) {               //
          if (r(i, e)) {                                               // 8
            return o.push(e);                                          // 8
          }                                                            //
        });o.sort(function (t, e) {                                    //
          return t.offset - e.offset;                                  // 8
        });return n.map(o, function (t) {                              //
          return t.element;                                            // 8
        });                                                            //
      } };n[m] = function () {                                         //
      var t, n;n = arguments[0], t = 2 <= arguments.length ? e.call(arguments, 1) : [];if (h[n]) {
        return h[n].apply(null, t);                                    // 8
      } else {                                                         //
        return h.aggregate.call(null, n);                              // 8
      }                                                                //
    };n[m].settings = { resizeThrottle: 100, scrollThrottle: 30 };return i.load(function () {
      return n[m]("refresh");                                          // 8
    });                                                                //
  });                                                                  //
}).call(this);                                                         //
/////////////////////////////////////////////////////////////////////////

}).call(this);
