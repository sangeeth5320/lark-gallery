{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"/**\n * SyntaxHighlighter\n * http://alexgorbatchev.com/SyntaxHighlighter\n *\n * SyntaxHighlighter is donationware. If you are using it, please donate.\n * http://alexgorbatchev.com/SyntaxHighlighter/donate.html\n *\n * @version\n * 3.0.83 (July 02 2010)\n * \n * @copyright\n * Copyright (C) 2004-2010 Alex Gorbatchev.\n *\n * @license\n * Dual licensed under the MIT and GPL licenses.\n */\n;(function () {\n\t// CommonJS\n\ttypeof require != 'undefined' ? SyntaxHighlighter = require('shCore').SyntaxHighlighter : null;\n\n\tfunction Brush() {\n\t\tvar keywords = 'break case catch continue ' + 'default delete do else false  ' + 'for function if in instanceof ' + 'new null return super switch ' + 'this throw true try typeof var while with';\n\n\t\tvar r = SyntaxHighlighter.regexLib;\n\n\t\tthis.regexList = [{ regex: r.multiLineDoubleQuotedString, css: 'string' }, // double quoted strings\n\t\t{ regex: r.multiLineSingleQuotedString, css: 'string' }, // single quoted strings\n\t\t{ regex: r.singleLineCComments, css: 'comments' }, // one line comments\n\t\t{ regex: r.multiLineCComments, css: 'comments' }, // multiline comments\n\t\t{ regex: /\\s*#.*/gm, css: 'preprocessor' }, // preprocessor tags like #region and #endregion\n\t\t{ regex: new RegExp(this.getKeywords(keywords), 'gm'), css: 'keyword' } // keywords\n\t\t];\n\n\t\tthis.forHtmlScript(r.scriptScriptTags);\n\t};\n\n\tBrush.prototype = new SyntaxHighlighter.Highlighter();\n\tBrush.aliases = ['js', 'jscript', 'javascript'];\n\n\tSyntaxHighlighter.brushes.JScript = Brush;\n\n\t// CommonJS\n\ttypeof exports != 'undefined' ? exports.Brush = Brush : null;\n})();","ast":null,"map":{"version":3,"sources":["/plugins/revolution-slider/documentation/js/shBrushJScript.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA,CAAC,CAAC,YACF;;AAEC,QAAO,OAAO,AAAC,IAAI,WAAW,GAAG,iBAAiB,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,iBAAiB,GAAG,IAAI,CAAC;;AAEhG,UAAS,KAAK,GACd;AACC,MAAI,QAAQ,GAAG,4BAA4B,GACvC,gCAAgC,GAChC,gCAAgC,GAChC,+BAA+B,GAC/B,2CAA2C,CAC1C;;AAEL,MAAI,CAAC,GAAG,iBAAiB,CAAC,QAAQ,CAAC;;AAEnC,MAAI,CAAC,SAAS,GAAG,CAChB,EAAE,KAAK,EAAE,CAAC,CAAC,2BAA2B,EAAM,GAAG,EAAE,QAAQ,EAAE;AAC3D,IAAE,KAAK,EAAE,CAAC,CAAC,2BAA2B,EAAM,GAAG,EAAE,QAAQ,EAAE;AAC3D,IAAE,KAAK,EAAE,CAAC,CAAC,mBAAmB,EAAQ,GAAG,EAAE,UAAU,EAAE;AACvD,IAAE,KAAK,EAAE,CAAC,CAAC,kBAAkB,EAAQ,GAAG,EAAE,UAAU,EAAE;AACtD,IAAE,KAAK,EAAE,UAAU,EAAU,GAAG,EAAE,cAAc,EAAE;AAClD,IAAE,KAAK,EAAE,IAAI,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,SAAS,EAAE;GACtE,CAAC;;AAEH,MAAI,CAAC,aAAa,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC;EACvC,CAAC;;AAEF,MAAK,CAAC,SAAS,GAAG,IAAI,iBAAiB,CAAC,WAAW,EAAE,CAAC;AACtD,MAAK,CAAC,OAAO,GAAG,CAAC,IAAI,EAAE,SAAS,EAAE,YAAY,CAAC,CAAC;;AAEhD,kBAAiB,CAAC,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC;;;AAG1C,QAAO,OAAO,AAAC,IAAI,WAAW,GAAG,OAAO,CAAC,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC;CAC9D,CAAA,EAAG,CAAC","file":"/plugins/revolution-slider/documentation/js/shBrushJScript.js.map","sourcesContent":["/**\n * SyntaxHighlighter\n * http://alexgorbatchev.com/SyntaxHighlighter\n *\n * SyntaxHighlighter is donationware. If you are using it, please donate.\n * http://alexgorbatchev.com/SyntaxHighlighter/donate.html\n *\n * @version\n * 3.0.83 (July 02 2010)\n * \n * @copyright\n * Copyright (C) 2004-2010 Alex Gorbatchev.\n *\n * @license\n * Dual licensed under the MIT and GPL licenses.\n */\n;(function()\n{\n\t// CommonJS\n\ttypeof(require) != 'undefined' ? SyntaxHighlighter = require('shCore').SyntaxHighlighter : null;\n\n\tfunction Brush()\n\t{\n\t\tvar keywords =\t'break case catch continue ' +\n\t\t\t\t\t\t'default delete do else false  ' +\n\t\t\t\t\t\t'for function if in instanceof ' +\n\t\t\t\t\t\t'new null return super switch ' +\n\t\t\t\t\t\t'this throw true try typeof var while with'\n\t\t\t\t\t\t;\n\n\t\tvar r = SyntaxHighlighter.regexLib;\n\t\t\n\t\tthis.regexList = [\n\t\t\t{ regex: r.multiLineDoubleQuotedString,\t\t\t\t\tcss: 'string' },\t\t\t// double quoted strings\n\t\t\t{ regex: r.multiLineSingleQuotedString,\t\t\t\t\tcss: 'string' },\t\t\t// single quoted strings\n\t\t\t{ regex: r.singleLineCComments,\t\t\t\t\t\t\tcss: 'comments' },\t\t\t// one line comments\n\t\t\t{ regex: r.multiLineCComments,\t\t\t\t\t\t\tcss: 'comments' },\t\t\t// multiline comments\n\t\t\t{ regex: /\\s*#.*/gm,\t\t\t\t\t\t\t\t\tcss: 'preprocessor' },\t\t// preprocessor tags like #region and #endregion\n\t\t\t{ regex: new RegExp(this.getKeywords(keywords), 'gm'),\tcss: 'keyword' }\t\t\t// keywords\n\t\t\t];\n\t\n\t\tthis.forHtmlScript(r.scriptScriptTags);\n\t};\n\n\tBrush.prototype\t= new SyntaxHighlighter.Highlighter();\n\tBrush.aliases\t= ['js', 'jscript', 'javascript'];\n\n\tSyntaxHighlighter.brushes.JScript = Brush;\n\n\t// CommonJS\n\ttypeof(exports) != 'undefined' ? exports.Brush = Brush : null;\n})();\n"]},"hash":"81ae006c413485661219b5d5c837122c0249746d"}
