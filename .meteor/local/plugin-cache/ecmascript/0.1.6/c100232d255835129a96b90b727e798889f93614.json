{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"/**\n * SyntaxHighlighter\n * http://alexgorbatchev.com/SyntaxHighlighter\n *\n * SyntaxHighlighter is donationware. If you are using it, please donate.\n * http://alexgorbatchev.com/SyntaxHighlighter/donate.html\n *\n * @version\n * 3.0.83 (July 02 2010)\n * \n * @copyright\n * Copyright (C) 2004-2010 Alex Gorbatchev.\n *\n * @license\n * Dual licensed under the MIT and GPL licenses.\n */\n;(function () {\n\t// CommonJS\n\ttypeof require != 'undefined' ? SyntaxHighlighter = require('shCore').SyntaxHighlighter : null;\n\n\tfunction Brush() {\n\t\tfunction process(match, regexInfo) {\n\t\t\tvar constructor = SyntaxHighlighter.Match,\n\t\t\t    code = match[0],\n\t\t\t    tag = new XRegExp('(&lt;|<)[\\\\s\\\\/\\\\?]*(?<name>[:\\\\w-\\\\.]+)', 'xg').exec(code),\n\t\t\t    result = [];\n\n\t\t\tif (match.attributes != null) {\n\t\t\t\tvar attributes,\n\t\t\t\t    regex = new XRegExp('(?<name> [\\\\w:\\\\-\\\\.]+)' + '\\\\s*=\\\\s*' + '(?<value> \".*?\"|\\'.*?\\'|\\\\w+)', 'xg');\n\n\t\t\t\twhile ((attributes = regex.exec(code)) != null) {\n\t\t\t\t\tresult.push(new constructor(attributes.name, match.index + attributes.index, 'color1'));\n\t\t\t\t\tresult.push(new constructor(attributes.value, match.index + attributes.index + attributes[0].indexOf(attributes.value), 'string'));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tag != null) result.push(new constructor(tag.name, match.index + tag[0].indexOf(tag.name), 'keyword'));\n\n\t\t\treturn result;\n\t\t}\n\n\t\tthis.regexList = [{ regex: new XRegExp('(\\\\&lt;|<)\\\\!\\\\[[\\\\w\\\\s]*?\\\\[(.|\\\\s)*?\\\\]\\\\](\\\\&gt;|>)', 'gm'), css: 'color2' }, // <![ ... [ ... ]]>\n\t\t{ regex: SyntaxHighlighter.regexLib.xmlComments, css: 'comments' }, // <!-- ... -->\n\t\t{ regex: new XRegExp('(&lt;|<)[\\\\s\\\\/\\\\?]*(\\\\w+)(?<attributes>.*?)[\\\\s\\\\/\\\\?]*(&gt;|>)', 'sg'), func: process }];\n\t};\n\n\tBrush.prototype = new SyntaxHighlighter.Highlighter();\n\tBrush.aliases = ['xml', 'xhtml', 'xslt', 'html'];\n\n\tSyntaxHighlighter.brushes.Xml = Brush;\n\n\t// CommonJS\n\ttypeof exports != 'undefined' ? exports.Brush = Brush : null;\n})();","ast":null,"map":{"version":3,"sources":["/plugins/revolution-slider/documentation/js/shBrushXml.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA,CAAC,CAAC,YACF;;AAEC,QAAO,OAAO,AAAC,IAAI,WAAW,GAAG,iBAAiB,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,iBAAiB,GAAG,IAAI,CAAC;;AAEhG,UAAS,KAAK,GACd;AACC,WAAS,OAAO,CAAC,KAAK,EAAE,SAAS,EACjC;AACC,OAAI,WAAW,GAAG,iBAAiB,CAAC,KAAK;OACxC,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC;OACf,GAAG,GAAG,IAAI,OAAO,CAAC,0CAA0C,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;OAC9E,MAAM,GAAG,EAAE,CACV;;AAEF,OAAI,KAAK,CAAC,UAAU,IAAI,IAAI,EAC5B;AACC,QAAI,UAAU;QACb,KAAK,GAAG,IAAI,OAAO,CAAC,yBAAyB,GACxC,WAAW,GACX,+BAA+B,EAC/B,IAAI,CAAC,CAAC;;AAEZ,WAAO,CAAC,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA,IAAK,IAAI,EAC9C;AACC,WAAM,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC;AACxF,WAAM,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;KACnI;IACD;;AAED,OAAI,GAAG,IAAI,IAAI,EACd,MAAM,CAAC,IAAI,CACV,IAAI,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,SAAS,CAAC,CAC5E,CAAC;;AAEH,UAAO,MAAM,CAAC;GACd;;AAED,MAAI,CAAC,SAAS,GAAG,CAChB,EAAE,KAAK,EAAE,IAAI,OAAO,CAAC,wDAAwD,EAAE,IAAI,CAAC,EAAI,GAAG,EAAE,QAAQ,EAAE;AACvG,IAAE,KAAK,EAAE,iBAAiB,CAAC,QAAQ,CAAC,WAAW,EAAa,GAAG,EAAE,UAAU,EAAE;AAC7E,IAAE,KAAK,EAAE,IAAI,OAAO,CAAC,kEAAkE,EAAE,IAAI,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAC/G,CAAC;EACF,CAAC;;AAEF,MAAK,CAAC,SAAS,GAAG,IAAI,iBAAiB,CAAC,WAAW,EAAE,CAAC;AACtD,MAAK,CAAC,OAAO,GAAG,CAAC,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;;AAEjD,kBAAiB,CAAC,OAAO,CAAC,GAAG,GAAG,KAAK,CAAC;;;AAGtC,QAAO,OAAO,AAAC,IAAI,WAAW,GAAG,OAAO,CAAC,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC;CAC9D,CAAA,EAAG,CAAC","file":"/plugins/revolution-slider/documentation/js/shBrushXml.js.map","sourcesContent":["/**\n * SyntaxHighlighter\n * http://alexgorbatchev.com/SyntaxHighlighter\n *\n * SyntaxHighlighter is donationware. If you are using it, please donate.\n * http://alexgorbatchev.com/SyntaxHighlighter/donate.html\n *\n * @version\n * 3.0.83 (July 02 2010)\n * \n * @copyright\n * Copyright (C) 2004-2010 Alex Gorbatchev.\n *\n * @license\n * Dual licensed under the MIT and GPL licenses.\n */\n;(function()\n{\n\t// CommonJS\n\ttypeof(require) != 'undefined' ? SyntaxHighlighter = require('shCore').SyntaxHighlighter : null;\n\n\tfunction Brush()\n\t{\n\t\tfunction process(match, regexInfo)\n\t\t{\n\t\t\tvar constructor = SyntaxHighlighter.Match,\n\t\t\t\tcode = match[0],\n\t\t\t\ttag = new XRegExp('(&lt;|<)[\\\\s\\\\/\\\\?]*(?<name>[:\\\\w-\\\\.]+)', 'xg').exec(code),\n\t\t\t\tresult = []\n\t\t\t\t;\n\t\t\n\t\t\tif (match.attributes != null) \n\t\t\t{\n\t\t\t\tvar attributes,\n\t\t\t\t\tregex = new XRegExp('(?<name> [\\\\w:\\\\-\\\\.]+)' +\n\t\t\t\t\t\t\t\t\t\t'\\\\s*=\\\\s*' +\n\t\t\t\t\t\t\t\t\t\t'(?<value> \".*?\"|\\'.*?\\'|\\\\w+)',\n\t\t\t\t\t\t\t\t\t\t'xg');\n\n\t\t\t\twhile ((attributes = regex.exec(code)) != null) \n\t\t\t\t{\n\t\t\t\t\tresult.push(new constructor(attributes.name, match.index + attributes.index, 'color1'));\n\t\t\t\t\tresult.push(new constructor(attributes.value, match.index + attributes.index + attributes[0].indexOf(attributes.value), 'string'));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tag != null)\n\t\t\t\tresult.push(\n\t\t\t\t\tnew constructor(tag.name, match.index + tag[0].indexOf(tag.name), 'keyword')\n\t\t\t\t);\n\n\t\t\treturn result;\n\t\t}\n\t\n\t\tthis.regexList = [\n\t\t\t{ regex: new XRegExp('(\\\\&lt;|<)\\\\!\\\\[[\\\\w\\\\s]*?\\\\[(.|\\\\s)*?\\\\]\\\\](\\\\&gt;|>)', 'gm'),\t\t\tcss: 'color2' },\t// <![ ... [ ... ]]>\n\t\t\t{ regex: SyntaxHighlighter.regexLib.xmlComments,\t\t\t\t\t\t\t\t\t\t\t\tcss: 'comments' },\t// <!-- ... -->\n\t\t\t{ regex: new XRegExp('(&lt;|<)[\\\\s\\\\/\\\\?]*(\\\\w+)(?<attributes>.*?)[\\\\s\\\\/\\\\?]*(&gt;|>)', 'sg'), func: process }\n\t\t];\n\t};\n\n\tBrush.prototype\t= new SyntaxHighlighter.Highlighter();\n\tBrush.aliases\t= ['xml', 'xhtml', 'xslt', 'html'];\n\n\tSyntaxHighlighter.brushes.Xml = Brush;\n\n\t// CommonJS\n\ttypeof(exports) != 'undefined' ? exports.Brush = Brush : null;\n})();\n"]},"hash":"c100232d255835129a96b90b727e798889f93614"}
