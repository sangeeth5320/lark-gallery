{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"/*\nPlugin: jQuery Parallax\nVersion 1.1.3\nAuthor: Ian Lunn\nTwitter: @IanLunn\nAuthor URL: http://www.ianlunn.co.uk/\nPlugin URL: http://www.ianlunn.co.uk/plugins/jquery-parallax/\n\nDual licensed under the MIT and GPL licenses:\nhttp://www.opensource.org/licenses/mit-license.php\nhttp://www.gnu.org/licenses/gpl.html\n*/\n\n(function ($) {\n\tvar $window = $(window);\n\tvar windowHeight = $window.height();\n\n\t$window.resize(function () {\n\t\twindowHeight = $window.height();\n\t});\n\n\t$.fn.parallax = function (xpos, speedFactor, outerHeight) {\n\t\tvar $this = $(this);\n\t\tvar getHeight;\n\t\tvar firstTop;\n\t\tvar paddingTop = 0;\n\n\t\t//get the starting position of each element to have parallax applied to it\t\t\n\t\t$this.each(function () {\n\t\t\tfirstTop = $this.offset().top;\n\t\t});\n\n\t\tif (outerHeight) {\n\t\t\tgetHeight = function (jqo) {\n\t\t\t\treturn jqo.outerHeight(true);\n\t\t\t};\n\t\t} else {\n\t\t\tgetHeight = function (jqo) {\n\t\t\t\treturn jqo.height();\n\t\t\t};\n\t\t}\n\n\t\t// setup defaults if arguments aren't specified\n\t\tif (arguments.length < 1 || xpos === null) xpos = \"50%\";\n\t\tif (arguments.length < 2 || speedFactor === null) speedFactor = 0.1;\n\t\tif (arguments.length < 3 || outerHeight === null) outerHeight = true;\n\n\t\t// function to be called whenever the window is scrolled or resized\n\t\tfunction update() {\n\t\t\tvar pos = $window.scrollTop();\n\n\t\t\t$this.each(function () {\n\t\t\t\tvar $element = $(this);\n\t\t\t\tvar top = $element.offset().top;\n\t\t\t\tvar height = getHeight($element);\n\n\t\t\t\t// Check if totally above or totally below viewport\n\t\t\t\tif (top + height < pos || top > pos + windowHeight) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t$this.css('backgroundPosition', xpos + \" \" + Math.round((firstTop - pos) * speedFactor) + \"px\");\n\t\t\t});\n\t\t}\n\n\t\t$window.bind('scroll', update).resize(update);\n\t\tupdate();\n\t};\n})(jQuery);","ast":null,"map":{"version":3,"sources":["/client/lib/2_jquery.parallax.js"],"names":[],"mappings":";;;;;;;;;;;;;AAaA,CAAC,UAAU,CAAC,EAAE;AACb,KAAI,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC;AACxB,KAAI,YAAY,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;;AAEpC,QAAO,CAAC,MAAM,CAAC,YAAY;AAC1B,cAAY,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;EAChC,CAAC,CAAC;;AAEH,EAAC,CAAC,EAAE,CAAC,QAAQ,GAAG,UAAS,IAAI,EAAE,WAAW,EAAE,WAAW,EAAE;AACxD,MAAI,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;AACpB,MAAI,SAAS,CAAC;AACd,MAAI,QAAQ,CAAC;AACb,MAAI,UAAU,GAAG,CAAC,CAAC;;;AAGnB,OAAK,CAAC,IAAI,CAAC,YAAU;AACjB,WAAQ,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC;GACjC,CAAC,CAAC;;AAEH,MAAI,WAAW,EAAE;AAChB,YAAS,GAAG,UAAS,GAAG,EAAE;AACzB,WAAO,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;GACF,MAAM;AACN,YAAS,GAAG,UAAS,GAAG,EAAE;AACzB,WAAO,GAAG,CAAC,MAAM,EAAE,CAAC;IACpB,CAAC;GACF;;;AAGD,MAAI,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,KAAK,IAAI,EAAE,IAAI,GAAG,KAAK,CAAC;AACxD,MAAI,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,WAAW,KAAK,IAAI,EAAE,WAAW,GAAG,GAAG,CAAC;AACpE,MAAI,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,WAAW,KAAK,IAAI,EAAE,WAAW,GAAG,IAAI,CAAC;;;AAGrE,WAAS,MAAM,GAAE;AAChB,OAAI,GAAG,GAAG,OAAO,CAAC,SAAS,EAAE,CAAC;;AAE9B,QAAK,CAAC,IAAI,CAAC,YAAU;AACpB,QAAI,QAAQ,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;AACvB,QAAI,GAAG,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC;AAChC,QAAI,MAAM,GAAG,SAAS,CAAC,QAAQ,CAAC,CAAC;;;AAGjC,QAAI,GAAG,GAAG,MAAM,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,YAAY,EAAE;AACnD,YAAO;KACP;;AAED,SAAK,CAAC,GAAG,CAAC,oBAAoB,EAAE,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,GAAG,CAAA,GAAI,WAAW,CAAC,GAAG,IAAI,CAAC,CAAC;IAChG,CAAC,CAAC;GACH;;AAED,SAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC9C,QAAM,EAAE,CAAC;EACT,CAAC;CACF,CAAA,CAAE,MAAM,CAAC,CAAC","file":"/client/lib/2_jquery.parallax.js.map","sourcesContent":["/*\nPlugin: jQuery Parallax\nVersion 1.1.3\nAuthor: Ian Lunn\nTwitter: @IanLunn\nAuthor URL: http://www.ianlunn.co.uk/\nPlugin URL: http://www.ianlunn.co.uk/plugins/jquery-parallax/\n\nDual licensed under the MIT and GPL licenses:\nhttp://www.opensource.org/licenses/mit-license.php\nhttp://www.gnu.org/licenses/gpl.html\n*/\n\n(function( $ ){\n\tvar $window = $(window);\n\tvar windowHeight = $window.height();\n\n\t$window.resize(function () {\n\t\twindowHeight = $window.height();\n\t});\n\n\t$.fn.parallax = function(xpos, speedFactor, outerHeight) {\n\t\tvar $this = $(this);\n\t\tvar getHeight;\n\t\tvar firstTop;\n\t\tvar paddingTop = 0;\n\t\t\n\t\t//get the starting position of each element to have parallax applied to it\t\t\n\t\t$this.each(function(){\n\t\t    firstTop = $this.offset().top;\n\t\t});\n\n\t\tif (outerHeight) {\n\t\t\tgetHeight = function(jqo) {\n\t\t\t\treturn jqo.outerHeight(true);\n\t\t\t};\n\t\t} else {\n\t\t\tgetHeight = function(jqo) {\n\t\t\t\treturn jqo.height();\n\t\t\t};\n\t\t}\n\t\t\t\n\t\t// setup defaults if arguments aren't specified\n\t\tif (arguments.length < 1 || xpos === null) xpos = \"50%\";\n\t\tif (arguments.length < 2 || speedFactor === null) speedFactor = 0.1;\n\t\tif (arguments.length < 3 || outerHeight === null) outerHeight = true;\n\t\t\n\t\t// function to be called whenever the window is scrolled or resized\n\t\tfunction update(){\n\t\t\tvar pos = $window.scrollTop();\t\t\t\t\n\n\t\t\t$this.each(function(){\n\t\t\t\tvar $element = $(this);\n\t\t\t\tvar top = $element.offset().top;\n\t\t\t\tvar height = getHeight($element);\n\n\t\t\t\t// Check if totally above or totally below viewport\n\t\t\t\tif (top + height < pos || top > pos + windowHeight) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t$this.css('backgroundPosition', xpos + \" \" + Math.round((firstTop - pos) * speedFactor) + \"px\");\n\t\t\t});\n\t\t}\t\t\n\n\t\t$window.bind('scroll', update).resize(update);\n\t\tupdate();\n\t};\n})(jQuery);\n"]},"hash":"f7e5ecd597787c2a135b1060ab5e3ac632b38aef"}
